<?php
function approval_block_info() {
	$blocks ['pending_comments'] = array (
			'info' => t ( 'Pending Comments' ),
			'status' => TRUE,
			'region' => 'sidebar_first',
			'weight' => 0,
			'visibility' => 1 
	);
	return $blocks;
}
function approval_block_configure($delta) {
	$form = array ();
	switch ($delta) {
		case 'pending_comments' :
			$form ['pending_comment_count'] = array (
					'#type' => 'textfield',
					'#title' => t ( 'Configure Number of Comments to Display.' ),
					'#size' => 6,
					'#description' => t ( 'Enter the number of pending comments that will paaear in the block.' ),
					'#default_value' => variable_get ( 'pending_comment_count', 5 ) 
			);
	}
	return $form;
}
function approval_block_save($delta = '', $edit = array()) {
	switch ($delta) {
		case 'pending_comments' :
			variable_set ( 'pending_comment_count', ( int ) $edit ['pending_comment_count'] );
			break;
	}
	return;
}
function approval_block_view($delta = '') {
	switch ($delta) {
		case 'pending_comments' :
			$block ['subject'] = t ( 'Pending Comments' );
			$block ['content'] = approval_block_content ( $delta );
			return $block;
			break;
	}
}

/**
 * A module-defined blcok content function.
 */
function approval_block_contents($delta) {
	switch ($delta) {
		case 'pending_comments' :
			if (user_access ( 'administer comments' )) {
				$nbr_comments = variable_get ( 'pending_comment_count' );
				$result = db_query ( "SELECT cid, subject FROM {comment} WHERE status = 0 limit $nbr_comments" );
				
				$items = array ();
				foreach ( $result as $row ) {
					$items [] = l ( $row->subject, 'comment/' . $row->cid . '/edit' );
				}
				return array (
						'#markup' => theme ( 'item_list', array (
								'item' => $items 
						) ) 
				);
			}
			break;
	}
}